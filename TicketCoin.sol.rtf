{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red26\green26\blue41;\red172\green172\blue193;
\red212\green212\blue212;\red167\green197\blue152;\red45\green175\blue118;\red31\green133\blue64;\red253\green181\blue13;
\red13\green102\blue149;\red79\green123\blue61;\red187\green97\blue44;\red14\green86\blue166;\red237\green114\blue173;
\red140\green108\blue11;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c13333\c13725\c21176;\cssrgb\c72941\c73333\c80000;
\cssrgb\c86275\c86275\c86275;\cssrgb\c70980\c80784\c65882;\cssrgb\c19608\c72941\c53725;\cssrgb\c12941\c58039\c31765;\cssrgb\c100000\c75686\c2745;
\cssrgb\c0\c47843\c65098;\cssrgb\c37647\c54510\c30588;\cssrgb\c78824\c45882\c22353;\cssrgb\c3137\c42353\c70980;\cssrgb\c95294\c54118\c73333;
\cssrgb\c61961\c49412\c3137;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 pragma\cf4 \strokec4  \cf2 \strokec2 solidity\cf4 \strokec4  \cf5 \strokec5 ^\cf6 \strokec6 0.4.24\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 library\cf4 \strokec4  SafeMath \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 function\cf4 \strokec4  mul\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 internal\cf4 \strokec4  \cf7 \strokec7 pure\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 if\cf4 \strokec4  \cf5 \strokec5 (\cf4 \strokec4 a \cf5 \strokec5 ==\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3       \cf8 \strokec8 return\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  c \cf5 \strokec5 =\cf4 \strokec4  a \cf5 \strokec5 *\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 assert\cf5 \strokec5 (\cf4 \strokec4 c \cf5 \strokec5 /\cf4 \strokec4  a \cf5 \strokec5 ==\cf4 \strokec4  b\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  c\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  div\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 internal\cf4 \strokec4  \cf7 \strokec7 pure\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf11 \strokec11 // assert(b > 0); // Solidity automatically throws when dividing by 0\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  c \cf5 \strokec5 =\cf4 \strokec4  a \cf5 \strokec5 /\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf11 \strokec11 // assert(a == b * c + a % b); // There is no case in which this doesn't hold\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  c\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  sub\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 internal\cf4 \strokec4  \cf7 \strokec7 pure\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 assert\cf5 \strokec5 (\cf4 \strokec4 b \cf5 \strokec5 <=\cf4 \strokec4  a\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  a \cf5 \strokec5 -\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  add\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 internal\cf4 \strokec4  \cf7 \strokec7 pure\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  c \cf5 \strokec5 =\cf4 \strokec4  a \cf5 \strokec5 +\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 assert\cf5 \strokec5 (\cf4 \strokec4 c \cf5 \strokec5 >=\cf4 \strokec4  a\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  c\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  Ownable \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 address\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  owner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf2 \strokec2 event\cf4 \strokec4  OwnershipTransferred\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  previousOwner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  newOwner\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3   \cf11 \strokec11 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11    * @dev Throws if called by any account other than the owner.\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11    */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 modifier\cf4 \strokec4  onlyOwner\cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender \cf5 \strokec5 ==\cf4 \strokec4  owner\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     _\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf11 \strokec11 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11    * @dev Allows the current owner to transfer control of the contract to a newOwner.\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11    * @param newOwner The address to transfer ownership to.\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11    */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 function\cf4 \strokec4  transferOwnership\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  newOwner\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  onlyOwner \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 newOwner \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ));\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  OwnershipTransferred\cf5 \strokec5 (\cf4 \strokec4 owner\cf5 \strokec5 ,\cf4 \strokec4  newOwner\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     owner \cf5 \strokec5 =\cf4 \strokec4  newOwner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  Pausable \cf2 \strokec2 is\cf4 \strokec4  Ownable \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 event\cf4 \strokec4  Pause\cf5 \strokec5 ();\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 event\cf4 \strokec4  Unpause\cf5 \strokec5 ();\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 bool\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  paused \cf5 \strokec5 =\cf4 \strokec4  \cf2 \strokec2 false\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf11 \strokec11 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11    * @dev Modifier to make a function callable only when the contract is not paused.\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11    */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 modifier\cf4 \strokec4  whenNotPaused\cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (!\cf4 \strokec4 paused\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     _\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf11 \strokec11 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11    * @dev Modifier to make a function callable only when the contract is paused.\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11    */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 modifier\cf4 \strokec4  whenPaused\cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 paused\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     _\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf11 \strokec11 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11    * @dev called by the owner to pause, triggers stopped state\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11    */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 function\cf4 \strokec4  pause\cf5 \strokec5 ()\cf4 \strokec4  onlyOwner whenNotPaused \cf7 \strokec7 public\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     paused \cf5 \strokec5 =\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Pause\cf5 \strokec5 ();\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf11 \strokec11 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11    * @dev called by the owner to unpause, returns to normal state\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11    */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 function\cf4 \strokec4  unpause\cf5 \strokec5 ()\cf4 \strokec4  onlyOwner whenPaused \cf7 \strokec7 public\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     paused \cf5 \strokec5 =\cf4 \strokec4  \cf2 \strokec2 false\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Unpause\cf5 \strokec5 ();\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  ERC20Basic \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 uint256\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  totalSupply\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 function\cf4 \strokec4  balanceOf\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  who\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf7 \strokec7 view\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 function\cf4 \strokec4  transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 event\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  from\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  ERC20 \cf2 \strokec2 is\cf4 \strokec4  ERC20Basic \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 function\cf4 \strokec4  allowance\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  owner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  spender\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf7 \strokec7 view\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 function\cf4 \strokec4  transferFrom\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  from\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 function\cf4 \strokec4  approve\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 event\cf4 \strokec4  Approval\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  owner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  StandardToken \cf2 \strokec2 is\cf4 \strokec4  ERC20 \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 using\cf4 \strokec4  SafeMath \cf12 \strokec12 for\cf4 \strokec4  \cf2 \strokec2 uint256\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 mapping\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  => \cf2 \strokec2 mapping\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  => \cf2 \strokec2 uint256\cf5 \strokec5 ))\cf4 \strokec4  \cf7 \strokec7 internal\cf4 \strokec4  allowed\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 mapping\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  => \cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  tokenBlacklist\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 event\cf4 \strokec4  Blacklist\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  blackListed\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 bool\cf4 \strokec4  value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf2 \strokec2 mapping\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  => \cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  balances\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 tokenBlacklist\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 ==\cf4 \strokec4  \cf2 \strokec2 false\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 _to \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ));\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 _value \cf5 \strokec5 <=\cf4 \strokec4  balances\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\
\cb3     \cf11 \strokec11 // SafeMath.sub will throw if there is not enough balance.\cf4 \cb1 \strokec4 \
\cb3     balances\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     balances\cf5 \strokec5 [\cf4 \strokec4 _to\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 _to\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  _to\cf5 \strokec5 ,\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  balanceOf\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _owner\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf7 \strokec7 view\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  balance\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 _owner\cf5 \strokec5 ];\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  transferFrom\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _from\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  _to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 tokenBlacklist\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 ==\cf4 \strokec4  \cf2 \strokec2 false\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 _to \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ));\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 _value \cf5 \strokec5 <=\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 _from\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 _value \cf5 \strokec5 <=\cf4 \strokec4  allowed\cf5 \strokec5 [\cf4 \strokec4 _from\cf5 \strokec5 ][\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\
\cb3     balances\cf5 \strokec5 [\cf4 \strokec4 _from\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 _from\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     balances\cf5 \strokec5 [\cf4 \strokec4 _to\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 _to\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     allowed\cf5 \strokec5 [\cf4 \strokec4 _from\cf5 \strokec5 ][\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  allowed\cf5 \strokec5 [\cf4 \strokec4 _from\cf5 \strokec5 ][\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf4 \strokec4 _from\cf5 \strokec5 ,\cf4 \strokec4  _to\cf5 \strokec5 ,\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  approve\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     allowed\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  _value\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Approval\cf5 \strokec5 (\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  allowance\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _owner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  _spender\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf7 \strokec7 view\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  allowed\cf5 \strokec5 [\cf4 \strokec4 _owner\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ];\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  increaseApproval\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  _addedValue\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     allowed\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  allowed\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 _addedValue\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Approval\cf5 \strokec5 (\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  allowed\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  decreaseApproval\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  _subtractedValue\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint\cf4 \strokec4  oldValue \cf5 \strokec5 =\cf4 \strokec4  allowed\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ];\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 if\cf4 \strokec4  \cf5 \strokec5 (\cf4 \strokec4 _subtractedValue \cf5 \strokec5 >\cf4 \strokec4  oldValue\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3       allowed\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \strokec4  \cf9 \strokec9 else\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3       allowed\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  oldValue\cf5 \strokec5 .\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 _subtractedValue\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Approval\cf5 \strokec5 (\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  allowed\cf5 \strokec5 [\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 _spender\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  _blackList\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _address\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 bool\cf4 \strokec4  _isBlackListed\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 internal\cf4 \strokec4  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 tokenBlacklist\cf5 \strokec5 [\cf4 \strokec4 _address\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 !=\cf4 \strokec4  _isBlackListed\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   tokenBlacklist\cf5 \strokec5 [\cf4 \strokec4 _address\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  _isBlackListed\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 emit\cf4 \strokec4  Blacklist\cf5 \strokec5 (\cf4 \strokec4 _address\cf5 \strokec5 ,\cf4 \strokec4  _isBlackListed\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  PausableToken \cf2 \strokec2 is\cf4 \strokec4  StandardToken\cf5 \strokec5 ,\cf4 \strokec4  Pausable \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 function\cf4 \strokec4  transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  whenNotPaused \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf13 \strokec13 super\cf5 \strokec5 .\cf4 \strokec4 transfer\cf5 \strokec5 (\cf4 \strokec4 _to\cf5 \strokec5 ,\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  transferFrom\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _from\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  _to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  whenNotPaused \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf13 \strokec13 super\cf5 \strokec5 .\cf4 \strokec4 transferFrom\cf5 \strokec5 (\cf4 \strokec4 _from\cf5 \strokec5 ,\cf4 \strokec4  _to\cf5 \strokec5 ,\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  approve\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  whenNotPaused \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf13 \strokec13 super\cf5 \strokec5 .\cf4 \strokec4 approve\cf5 \strokec5 (\cf4 \strokec4 _spender\cf5 \strokec5 ,\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  increaseApproval\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  _addedValue\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  whenNotPaused \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf4 \strokec4  success\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf13 \strokec13 super\cf5 \strokec5 .\cf4 \strokec4 increaseApproval\cf5 \strokec5 (\cf4 \strokec4 _spender\cf5 \strokec5 ,\cf4 \strokec4  _addedValue\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  decreaseApproval\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  _subtractedValue\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  whenNotPaused \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf4 \strokec4  success\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 return\cf4 \strokec4  \cf13 \strokec13 super\cf5 \strokec5 .\cf4 \strokec4 decreaseApproval\cf5 \strokec5 (\cf4 \strokec4 _spender\cf5 \strokec5 ,\cf4 \strokec4  _subtractedValue\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 function\cf4 \strokec4  blackListAddress\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  listAddress\cf5 \strokec5 ,\cf4 \strokec4   \cf2 \strokec2 bool\cf4 \strokec4  isBlackListed\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  whenNotPaused onlyOwner  \cf8 \strokec8 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf4 \strokec4  success\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 return\cf4 \strokec4  \cf13 \strokec13 super\cf5 \strokec5 .\cf4 \strokec4 _blackList\cf5 \strokec5 (\cf4 \strokec4 listAddress\cf5 \strokec5 ,\cf4 \strokec4  isBlackListed\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  TicketCoin \cf2 \strokec2 is\cf4 \strokec4  PausableToken \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 string\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  name\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 string\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  symbol\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  decimals\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 event\cf4 \strokec4  Mint\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  from\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 event\cf4 \strokec4  Burn\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  burner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3   \cb1 \
\cb3     \cf14 \strokec14 constructor\cf5 \strokec5 (\cf2 \strokec2 string\cf4 \strokec4  \cf15 \strokec15 memory\cf4 \strokec4  _name\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 string\cf4 \strokec4  \cf15 \strokec15 memory\cf4 \strokec4  _symbol\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _decimals\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _supply\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  tokenOwner\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         name \cf5 \strokec5 =\cf4 \strokec4  _name\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         symbol \cf5 \strokec5 =\cf4 \strokec4  _symbol\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         decimals \cf5 \strokec5 =\cf4 \strokec4  _decimals\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         totalSupply \cf5 \strokec5 =\cf4 \strokec4  _supply \cf5 \strokec5 *\cf4 \strokec4  \cf6 \strokec6 10\cf4 \strokec4 **_decimals\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 tokenOwner\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  totalSupply\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         owner \cf5 \strokec5 =\cf4 \strokec4  tokenOwner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  tokenOwner\cf5 \strokec5 ,\cf4 \strokec4  totalSupply\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 function\cf4 \strokec4  burn\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  _value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 public\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     _burn\cf5 \strokec5 (\cf10 \strokec10 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  _burn\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _who\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  _value\cf5 \strokec5 )\cf4 \strokec4  \cf7 \strokec7 internal\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 require\cf5 \strokec5 (\cf4 \strokec4 _value \cf5 \strokec5 <=\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 _who\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3     balances\cf5 \strokec5 [\cf4 \strokec4 _who\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 _who\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     totalSupply \cf5 \strokec5 =\cf4 \strokec4  totalSupply\cf5 \strokec5 .\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Burn\cf5 \strokec5 (\cf4 \strokec4 _who\cf5 \strokec5 ,\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf4 \strokec4 _who\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  _value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  mint\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  account\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  onlyOwner \cf7 \strokec7 public\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\
\cb3         totalSupply \cf5 \strokec5 =\cf4 \strokec4  totalSupply\cf5 \strokec5 .\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 account\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 account\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Mint\cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  account\cf5 \strokec5 ,\cf4 \strokec4  amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  account\cf5 \strokec5 ,\cf4 \strokec4  amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
}